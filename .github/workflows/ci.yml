name: CI

on:
  push:
    branches: [ main, claude/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests/ -v --cov=spec_tools --cov-report=term-missing

    - name: Upload coverage reports
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Run ruff check
      run: |
        source .venv/bin/activate
        ruff check spec_tools/ tests/

    - name: Run ruff format check
      run: |
        source .venv/bin/activate
        ruff format --check spec_tools/ tests/

    - name: Validate file allowlist
      run: |
        source .venv/bin/activate
        spec-tools lint --verbose

    - name: Validate spec-test structure
      run: |
        source .venv/bin/activate
        spec-tools check-structure

    - name: Validate spec coverage
      run: |
        source .venv/bin/activate
        spec-tools check-coverage
